Description:
Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.

Solution:
遍历

Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        queue<TreeNode*> qu;
        int sum = 0;
        if (root == NULL) return sum;
        TreeNode* cur;
        qu.push(root);
        while(!qu.empty()) {
            cur = qu.front();
            qu.pop();
            if (cur->left) {
                if (cur->left->left == NULL && cur->left->right == NULL) sum += cur->left->val;
                qu.push(cur->left);
            }
            if (cur->right) qu.push(cur->right);
        }
        return sum;
    }
};
