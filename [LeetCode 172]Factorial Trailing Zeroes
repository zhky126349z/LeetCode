Description:
Given an integer n, return the number of trailing zeroes in n!.

Note: Your solution should be in logarithmic time complexity.

Solution:
求一个整数n的阶乘的后置0的个数，后置0的个数等价于n!的因子5的个数，
n！= [5k * 5(k-1) * ... * 10 * 5] * a，其中 n = 5k + r (0 <= r <= 4)，a是一个不含因子“5”的整数。
f(x)表示正整数x末尾所含有的“0”的个数, g(x)表示正整数x的因式分解中因子“5”的个数，
f(n!) = g(n!) = g(5^k * k! * a) = k + g(k!) = k + f(k!)

Code:
class Solution {
public:
    int trailingZeroes(int n) {
        int ans = 0;
        int num = n;
        while (num >= 5) {
            ans += num / 5;
            num = num / 5;
        }
        return ans;
    }
};
