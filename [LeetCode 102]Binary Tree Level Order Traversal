Description:
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]

Solution:
层次遍历，用队列，每次一层遍历完插入一个NULL作为标记。

Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> q;
        vector<vector<int>> res;
        if (root == NULL) return res;
        q.push(root);
        q.push(NULL);
        while(!q.empty()) {
            vector<int> temp;
            TreeNode* node = q.front();
            q.pop();
            while(node != NULL) {
                temp.push_back(node->val);
                if (node->left != NULL) q.push(node->left);
                if (node->right != NULL) q.push(node->right);
                node = q.front();
                q.pop();
            }
            
            if (temp.size() > 0) res.push_back(temp);
            
            if(!q.empty()) {
                q.push(NULL);
            }
        }
        return res;
    }
};
