Description:
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.
Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:
Input: x = 1, y = 4
Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑
The above arrows point to positions where the corresponding bits are different.

Solution:
水题，位运算，先异或得出他们有多少位不同，然后计算异或结果的1的个数。
哇，人家算有多少个1，用n & (n-1)把最右边的一个1变成0，不断循环得到最后有几个1，太厉害了吧。

Code:
class Solution {
public:
    int hammingDistance(int x, int y) {
        int res = 0;
        int z = x ^ y;
        while (z != 0) {
            if (z & 1 == 1) {
                res ++;
            }
            z = z >> 1;
        }
        return res;
    }
};
