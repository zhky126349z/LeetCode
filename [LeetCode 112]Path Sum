Description:
Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

Note: A leaf is a node with no children.

Example:

Given the below binary tree and sum = 22,

      5
     / \
    4   8
   /   / \
  11  13  4
 /  \      \
7    2      1

Solution:
DFS

Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
    bool DFS(TreeNode* node, int sum, int target) {
        if (!node->left && !node->right) {
            return sum + node->val == target;
        }
        return (node->left ? DFS(node->left, sum + node->val, target) : false)
            | (node->right ? DFS(node->right, sum + node->val, target) : false);
    }

public:
    bool hasPathSum(TreeNode* root, int sum) {
        if (root == NULL) return false;
        return DFS(root, 0, sum);
    }
};
