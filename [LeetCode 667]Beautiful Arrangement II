Description:
Given two integers n and k, you need to construct a list which contains n different positive integers ranging from 1 to n and obeys the following requirement: 
Suppose this list is [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers.

If there are multiple answers, print any of them.

Example 1:
Input: n = 3, k = 1
Output: [1, 2, 3]
Explanation: The [1, 2, 3] has three different positive integers ranging from 1 to 3, and the [1, 1] has exactly 1 distinct integer: 1.
Example 2:
Input: n = 3, k = 2
Output: [1, 3, 2]
Explanation: The [1, 3, 2] has three different positive integers ranging from 1 to 3, and the [2, 1] has exactly 2 distinct integers: 1 and 2.

Solution:
构造数组。k个不同的间隔值，总共有n-1个间隔值，我的想法是一个最大一个最小，然后不断循环，差值肯定都是不一样的，那如果k<n-1就把若干个小值附加在前面，
使间隔值为1的个数变多，来满足题意。

Code:
class Solution {
public:
    vector<int> constructArray(int n, int k) {
        vector<int> res;
        int same = n - 1 - k;
        for (int i = 0; i <= same; i ++) {
            res.push_back(i + 1);
        }
        int min = same + 2;
        int max = n;
        bool rev = true;
        while(res.size() < n) {
            if(rev) {
                res.push_back(max);
                max --;
            } else {
                res.push_back(min);
                min ++;
            }
            rev = !rev;
        }
        
        return res;
    }
};
