Description:
Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.

Solution:
DP，逻辑比较简单，O(n*m),m为小于n的平方数的个数，比较慢。广搜也可以。

Code:
class Solution {
public:
    int numSquares(int n) {
        vector<int> nums;
        int dp[n + 1];
        memset(dp, 0, sizeof(dp));
        for (int i = 1; i * i <= n; i ++) {
            nums.push_back(i * i);
        }
        for (int i = 1; i <= n; i ++) {
            
            for (int j : nums) {
                if (i - j < 0)  continue;
                if (dp[i] == 0 || dp[i - j] + 1 < dp[i]) {
                    dp[i] = dp[i - j] + 1;
                }
            }
        }
        return dp[n];
    }
};
