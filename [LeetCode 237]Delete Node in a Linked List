Description:
Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.

Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list should become 1 -> 2 -> 4 after calling your function.

Solution:
链表里删元素，但是不给你他前一个元素的指针，把所有后一个元素的值往前移一位

Code:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void deleteNode(ListNode* node) {
        ListNode* post = node->next;
        while(post) {
            node->val = post->val;
            if (!post->next) {
                node->next = NULL;
                break;
            }
            node = post;
            post = post->next;
        }
        return ;
    }
};
